load "frame";
load "math";
load "std";
load "flatmap";
load "arrays";
load "threads";

fn circle(cx, cy, rad) {
    foval(cx - rad, cy - rad, 2 * rad, 2 * rad);
}

let w = 800;
let h = 600;
let w2 = w/2;
let h2 = h/2;
let frame = window("Agar.io clone", w, h);

let fieldWidth = 5000;
let fieldHeight = 3000;

let fieldX = rand(fieldWidth) - w2;
let fieldY = rand(fieldHeight) - h2;

let NUM_FOOD = 350;
let food = flatMap(fieldWidth, fieldHeight);

for (let i = 0; i < NUM_FOOD; i++) {
    food.put(0, i, rand(fieldWidth));
    food.put(1, i, rand(fieldHeight));
    food.put(2, i, 6 + rand(2));
    food.put(3, i, rand(255));
}

let playerSize = 8;
let playerColor = rand(255);

let run = 1;
while (run) {
    let mouse = mouseHover();
    let angle = atan2(mouse.at(1) - h2, mouse.at(0) - w2);
    fieldX += cos(angle) * 50/playerSize;
    fieldY += sin(angle) * 50/playerSize;
    if (fieldX < w2 - 1) {
        fieldX = w2 -1;
    } else if (fieldX > fieldWidth - w2 - 1) {
        fieldX = fieldWidth - w2 - 1;
    }

    if (fieldY < h2 - 1) {
        fieldY = h2 - 1;
    } else if (fieldY > fieldHeight - h2 - 1) {
        fieldY = fieldHeight - h2 - 1;
    }

    color(255, 255, 255);
    frect(0, 0, w, h);

    color(20, 20, 20);
    rect(-fieldX, -fieldY, fieldWidth, fieldHeight);

    for (let i = 0; i < NUM_FOOD; i++) {
        let dx = food.at(0, i) - fieldX - w2;
        let dy = food.at(1, i) - fieldY - h2;
        let rad = food.at(2, i) + playerSize;
        if ( (dx*dx + dy*dy) < (rad*rad) ) {
            playerSize++;
            food.put(0, i, rand(w));
            food.put(1, i, rand(h));
            food.put(2, i, 6 + rand(2));
            food.put(3, i, rand(255));
        }
        color(food.at(3, i));
        circle(food.at(0, i) - fieldX, food.at(1, i) - fieldY, food.at(2, i));
    }

    color(playerColor);
    circle(w2, h2, playerSize);
    color(0);
    drawstring(playerSize, w2-7, h2+4);

    windowRepaint();
    sleep(20);
}
